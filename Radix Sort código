#include <stdio.h>
#include <stdlib.h>

void countingSort(int arr[], int n, int exp) {
    int output[n]; 
    int count[10] = {0};

    for (int i = 0; i < n; i++) {
        count[(arr[i] / exp) % 10]++;
    }

    for (int i = 1; i < 10; i++) {
        count[i] += count[i - 1];
    }

    for (int i = n - 1; i >= 0; i--) {
        output[count[(arr[i] / exp) % 10] - 1] = arr[i];
        count[(arr[i] / exp) % 10]--;
    }

    
    for (int i = 0; i < n; i++) {
        arr[i] = output[i];
    }
}

// Função principal para implementar o Radix Sort
void radixSort(int arr[], int n) {
    int max = arr[0];
    for (int i = 1; i < n; i++) {
        if (arr[i] > max) {
            max = arr[i];
        }
    }

    for (int exp = 1; max / exp > 0; exp *= 10) {
        countingSort(arr, n, exp);
    }
}

// Função para imprimir a lista
void printArray(int arr[], int n) {
    for (int i = 0; i < n; i++) {
        printf("%d ", arr[i]);
    }
    printf("\n");
}

int main() {
    // Testando o Radix Sort com diferentes tamanhos de números
    int arr1[] = {170, 45, 75, 90, 802, 24, 2, 66};
    int n1 = sizeof(arr1) / sizeof(arr1[0]);

    printf("Array original:\n");
    printArray(arr1, n1);

    radixSort(arr1, n1);

    printf("Array ordenado:\n");
    printArray(arr1, n1);

    return 0;
}
